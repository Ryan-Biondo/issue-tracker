Handle errors in the submission form
wrap the expression of the onSubmit function in a try catch block
can pull trycatch code snippet
clg error 
submit an empty form - returns an axios error object
- the api had anticipated the error and returns its own message under response, 
-errors generated by zod

can simplify error structure from zod by replacing .errors with .format()
- includes friendly messages that can be customized
- can add an argument to validation and add a custom message like
'Title is required.'

We should not really need these errors from validation 
because we should take care of them on client side validation (min characters)
- we want to show errors to the user if the form is invalid
- can do this if you have to rely on backend for validation
- ex. choosing a unique username

change from clg to displaying errors
show generic message for unexpected errors
create a state variable for holding the error
use the State hook, initialize the variable to an empty string
const [error, setError]
then within the catch block call setError('An unexpected error occured.')
give it a generic error message

Get the Callout component from RadixUI to show the message right above the form
https://www.radix-ui.com/themes/docs/components/callout
first, wrap the form in a div (or fragment)
above the form set the callout component only if we have an error
{error && <Callout.Root>}
label Callout.Text with {error}
and can change the color property on the Callout.Root

move the max width class to the container div
give the root a class of mb-5